diff --git a/main.c b/main.c
index 432f435..a749dea 100644
--- a/main.c
+++ b/main.c
@@ -13,37 +13,11 @@ volatile sint16_t list_seed = 0x66;
 volatile sint32_t mat_seed = 0x11;
 volatile sint32_t conv_seed = 0x7;
 
-/*Function: start_time & stop_time
-    record the time
-*/
-/*
-#define TIMESTRUCT struct timespec
-TIMESTRUCT time_start;
-TIMESTRUCT time_end;
 
-void
-start_time(){
-    time_start.tv_sec = 0;
-    time_start.tv_nsec = 0;
-    time_end.tv_sec = 0;
-    time_end.tv_nsec = 0;
-    clock_gettime(CLOCK_REALTIME, &time_start);
-    return;
-}
-
-void 
-stop_time(){
-    clock_gettime(CLOCK_REALTIME, &time_end);
-    return;
-}
-*/
-
-//#define CLOCKS_PER_SEC  ((__clock_t) 1000000)
 #define TIMESTRUCT clock_t
 TIMESTRUCT time_start;
 TIMESTRUCT time_end;
 float time_run;
-//double time_run;
 
 uint32_t num_iterate = NUM_ITERATE;
 
@@ -64,9 +38,10 @@ stop_time(){
 
 void
 run_time(){
-    //stop_time();
     time_run = (time_end - time_start) * 1.0 /CLOCKS_PER_SEC;
 }
+
+
 /* Function: report
     report the result.
 
@@ -80,7 +55,6 @@ report(){
     printf("DataDim:\n");
     printf("%d\n", DATA_DIM);
     printf("DataType:\n");
-    //printf("%d\n", TEST_TYPE);
     #if TEST_TYPE == INT_TYPE
     printf("INT_TYPE\n");
     #elif TEST_TYPE == FP32_TYPE
@@ -88,10 +62,6 @@ report(){
     #elif TEST_TYPE == FP64_TYPE
     printf("FP64_TYPE\n");
     #endif
-    //printf("tick_begin:\n");
-    //printf("%ld\n", time_start);
-    //printf("tick_end:\n");
-    //printf("%ld\n", time_end);
     printf("TotalTicks/Ticks:\n");
     printf("%ld\n", time_end - time_start);
     printf("TotalTime/Secs:\n");
@@ -103,20 +73,7 @@ report(){
     printf("--------------------------------------------------------------\n");
     return;
 }
-/*
-void 
-report(){
-    printf("------------------------------BEGIN---------------------------\n");
-    printf("time_start:\n");
-    printf("%ld s %ld ns\n", time_start.tv_sec, time_start.tv_nsec);
-    printf("time_end:\n");
-    printf("%ld s %ld ns\n", time_end.tv_sec, time_end.tv_nsec);
-    printf("run time:\n");
-    printf("%ld s %ld ns\n", (time_end.tv_sec - time_start.tv_sec), (time_end.tv_nsec - time_start.tv_nsec));
-    printf("------------------------------END----------------------------\n");
-    return;
-}
-*/
+
 
 /* Function: main
     This function consists of the following steps:
@@ -155,7 +112,7 @@ main(){
         for(int i = 0; i < DIM_X; i++){
             for(int j = 0; j < DIM_Y; j++){
                 for(int k = 0; k < DIM_Z; k++){
-                    info.data[i][j][k] == (list_seed) ^ (i + j + k);
+                    info.data[i][j][k] = (list_seed) ^ (i + j + k);
                 }
             }
         }
@@ -175,7 +132,7 @@ main(){
         for(int i = 0; i < DIM_X; i++){
             for(int j = 0; j < DIM_Y; j++){
                 for(int k = 0; k < DIM_Z; k++){
-                    info.data[i][j][k] == (((list_seed << 16) | list_seed) + (i^j^k))/((list_seed << 10) * 1.3);
+                    info.data[i][j][k] = (((list_seed << 16) | list_seed) + (i^j^k))/((list_seed << 10) * 1.3);
                 }
             }
         }
@@ -222,14 +179,6 @@ main(){
         conv3D(conv_p->in, conv_p->out, conv_p->InChannel, conv_p->InWidth, conv_p->InHeight, conv_p->InDepth, conv_p->filter, conv_p->filter_size, conv_p->stride, conv_p->bias, conv_p->OutChannel);
         #endif
         
-
-        /*
-        run_time();
-        
-        if(i == (num_iterate - 1) && time_run < MIN_SECS){
-            num_iterate = num_iterate * 5;
-        }
-        */
     }
     stop_time();
     run_time();
